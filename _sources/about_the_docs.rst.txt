=======================
About the Documentation
=======================

Objective
=========

The objective of the DMS documentation package is to document all aspects of the DMS design, testing, fabrication, and end-use. These documents will support future fabrication, sales, and customer support efforts. We should try to produce an exhaustive, precise record.

Audience
========

For now, we are writing primarily for our own internal reference. However, much of this documentation will ultimately be transferred to Edare as we begin production, and to BioTek and their customers as end-user documentation. Keep this in mind when writing.

How to Read the Documents
=========================

I guess you're already doing that. For Creare internal reference, the top-level index is here:

`\\\\OLYMPUS\\Projects\\7819-Droplet-II\\Technical Work\\Documentation\\DMS`_

.. _`\\\\OLYMPUS\\Projects\\7819-Droplet-II\\Technical Work\\Documentation\\DMS`: file:\\\\\OLYMPUS\\Projects\\7819-Droplet-II\\Technical%20Work\\Documentation\\DMS\\index.html

A subset of the documents built for sharing with external collaborators (BioTek) is here:

`https://creare-com.github.io/dms_docs/`_

.. _`https://creare-com.github.io/dms_docs/`: https://creare-com.github.io/dms_docs/

This external version does not include sensitive information and is kept up to date automatically.

How to Edit the Documents
=========================

The DMS documentation is written in reStructuredText_. We use Python and Sphinx to interpret them and make these nice html files. This allows us to connect all the documentation in a cohesive, linked package and track changes effectively with SVN.

.. _reStructuredText: http://docutils.sourceforge.net/rst.html

To edit the documents:

#. Get a text editor. `Notepad++`_ works well.

	.. _`Notepad++`: https://notepad-plus-plus.org/

#. Install a python distrubution like Anaconda_.

	.. _Anaconda: https://www.continuum.io/downloads

#. Sphinx should have come with Anaconda, but if not: ``pip install -U Sphinx``

#. Install the exceltable extension: ``pip install sphinxcontrib-exceltable``

#. Learn a little about `reStructuredText and Sphinx`_.

	.. _`reStructuredText and Sphinx`: http://www.sphinx-doc.org/en/1.4.8/rest.html
	
#. Check out the the SVN repo ``http://summit/svn/7818-Droplet``.

#. Go to ``trunk\Documents``.

#. Edit the ``.rst`` files.

#. In Windows explorer, run ``make_local.bat`` to build the documents locally. They will appear in a folder ``_build\html`` within ``trunk\Documents``. (Do not add these to SVN.) You can open ``index.html`` in a web browser to see the formatted documents.

#. Make more edits to the ``.rst`` files, build the docs again with ``make_local.bat``, and refresh your browser to see your changes.

#. When you're happy with the result, commit the .rst files to SVN. Your commited changes will automatically be built and published on Olympus and the GitHub website.